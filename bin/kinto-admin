#!/usr/bin/env node
var fs = require("node-fs-extra");
var path = require("path");
var express = require("express");
var yargs = require("yargs");

var root = path.join(__dirname, "..");
var distRoot = path.join(root, "dist");

function serve(port) {
  var app = express();

  app.use(express.static(distRoot));

  app.get("*", function(req, res) {
    res.sendFile(path.join(distRoot, "index.html"));
  });

  app.listen(port, "0.0.0.0", function(err) {
    if (err) {
      console.log(err);
      return;
    }

    console.log("Listening at http://0.0.0.0:" + port);
  });
}

function build(destination) {
  try {
    // create the destination folder
    fs.mkdirpSync(destination);
    // copy dist folder to destination
    fs.copySync(distRoot, destination);
  } catch(err) {
    console.error(err);
    return process.exit(1);
  }
}

function baseCommand(yargs) {
  return yargs
    .help("h")
    .alias("h", "help");
}

// Command line controller setup
yargs
  .strict()
  .version(function() {
    return require("../package").version;
  })
  .usage("Usage: $0 <command> [options]")
  .help("h")
  .alias("h", "help")

  // serve command
  .command("serve", "Serves the Kinto Web admin UI.", function(yargs) {
    var argv = baseCommand(yargs)
      .example("$ kinto-admin serve")
      .option("p", {
        alias: "port",
        describe: "Server port to use",
        default: 3000,
      })
      .argv;

    serve(argv.port, argv.config);
  })

  // build command
  .command("build", "Builds the Web admin assets for static hosting.", function(yargs) {
    var argv = baseCommand(yargs)
      .example("$ kinto-admin build -d build")
      .option("d", {
        alias: "destination",
        describe: "Target build directory.",
      })
      .demand(["destination"])
      .argv;

    build(argv.destination);
  })
  .argv;
